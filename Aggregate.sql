--1. From the following table, write a SQL query to calculate total purchase amount of all orders. Return total purchase amount. 
select sum(purch_amt) as 'total purchase amount' from orders

--2. From the following table, write a SQL query to calculate the average purchase amount of all orders. Return average purchase amount. 
select avg(purch_amt) as 'total purchase amount' from orders

--3. From the following table, write a SQL query that counts the number of unique salespeople. Return number of salespeople. 
select count(distinct(salesman_id)) as 'total purchase amount' from orders


--4. From the following table, write a SQL query to count the number of customers. Return number of customers.
select count(distinct(customer_id)) as 'number of customers' from customer


--5. From the following table, write a SQL query to determine the number of customers who received at least one grade for their activity.
select count(grade) as 'number of customers' from customer where grade is not null 

--6. From the following table, write a SQL query to find the maximum purchase amount.
select max(purch_amt) as 'max purchase amount' from orders

--7. From the following table, write a SQL query to find the minimum purchase amount.
select min(purch_amt) as 'min purchase amount' from orders

--8. From the following table, write a SQL query to find the highest grade of the customers in each city. Return city, maximum grade.
select max(grade) as 'maximum grade', city from customer group by city

--9. From the following table, write a SQL query to find the highest purchase amount ordered by each customer. Return customer ID, maximum purchase amount. 
select max(purch_amt) as 'maximum purchase amount', customer_id 
from orders 
group by customer_id

--10. From the following table, write a SQL query to find the highest purchase amount ordered by each customer on a particular date. 
-- Return, order date and highest purchase amount.
select max(purch_amt) as 'maximum purchase amount', customer_id, ord_date 
from orders 
group by customer_id,ord_date

--11. From the following table, write a SQL query to determine the highest purchase amount made by each salesperson on '2012-08-17'. 
-- Return salesperson ID, purchase amount
select max(purch_amt), salesman_id 
from orders 
where ord_date = '2012-08-17' group by salesman_id 

--12. From the following table, write a SQL query to find the highest order (purchase) amount by each customer on a particular order date. 
-- Filter the result by highest order (purchase) amount above 2000.00. Return customer id, order date and maximum purchase amount. 
select customer_id, ord_date, max(purch_amt) as maximum_purchase_amount 
from orders 
group by customer_id, ord_date 
having max(purch_amt) >2000.00

--13. From the following table, write a SQL query to find the maximum order (purchase) amount in the range 2000 - 6000 (Begin and end values are included.) 
-- by combination of each customer and order date. Return customer id, order date and maximum purchase amount.
select customer_id, ord_date, max(purch_amt) as maximum_purchase_amount 
from orders 
group by customer_id, ord_date 
having max(purch_amt) between 2000.00 AND 6000.00

--14. From the following table, write a SQL query to find the maximum order (purchase) amount based on the combination of each customer and order date.
-- Filter the rows for maximum order (purchase) amount is either 2000, 3000, 5760, 6000. Return customer id, order date and maximum purchase amount.
select customer_id, ord_date, max(purch_amt) as maximum_purchase_amount 
from orders 
group by customer_id, ord_date 
having max(purch_amt) IN(2000.00,  3000, 5760, 6000.00  )

--15. From the following table, write a SQL query to determine the maximum order amount for each customer. 
-- The customer ID should be in the range 3002 and 3007(Begin and end values are included.). Return customer id and maximum purchase amount. 
select customer_id, max(purch_amt) from orders 
where customer_id between 3002 and 3007
group by customer_id


--16. From the following table, write a SQL query to find the maximum order (purchase) amount for each customer. 
-- The customer ID should be in the range 3002 and 3007(Begin and end values are included.). 
-- Filter the rows for maximum order (purchase) amount is higher than 1000. Return customer id and maximum purchase amount.
select customer_id, max(purch_amt) from orders 
where customer_id between 3002 and 3007
group by customer_id
having max(purch_amt) > 1000

--17. From the following table, write a SQL query to determine the maximum order (purchase) amount generated by each salesperson. 
--Filter the rows for the salesperson ID is in the range 5003 and 5008 (Begin and end values are included.). 
-- Return salesperson id and maximum purchase amount.
select salesman_id, max(purch_amt) from orders 
where salesman_id between 5003 and 5008
group by salesman_id


--18. From the following table, write a SQL query to count all the orders generated on '2012-08-17'. Return number of orders.
select count(*) from orders where ord_date = '2012-08-17'

--19. From the following table, write a SQL query to count the number of salespeople in a city. Return number of salespeople.
select count(salesman_id) from orders WHERE city IS NOT NULL;

--20. From the following table, write a SQL query to count the number of orders based on the combination of each order date and salesperson. 
-- Return order date, salesperson id.
select ord_date, salesman_id, count(*) from orders group  by ord_date, salesman_id ;

--21. From the following table, write a SQL query to calculate the average product price. Return average product price. 
select avg(PRO_PRICE) from item_mast

--22. From the following table, write a SQL query to count the number of products whose price are higher than or equal to 350. Return number of products. 
select count(*) from item_mast where PRO_PRICE >= 350

--23. From the following table, write a SQL query to compute the average price for unique companies. Return average price and company id.
select avg(PRO_PRICE), pro_com from item_mast group by pro_com

--24. From the following table, write a SQL query to compute the sum of the allotment amount of all departments. Return sum of the allotment amount.
select sum(DPT_ALLOTMENT) from emp_department 

--25. From the following table, write a SQL query to count the number of employees in each department. Return department code and number of employees. 
select EMP_DEPT, count(*) from emp_details group by EMP_DEPT